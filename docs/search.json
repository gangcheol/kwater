[
  {
    "objectID": "posts/2023-07-31-00.Quarto Guide.html",
    "href": "posts/2023-07-31-00.Quarto Guide.html",
    "title": "00. Quarto Guide",
    "section": "",
    "text": "- 어… 일단 평소에도 quarto를 이용해서 웹사이트를 관리했지만… 뭔가 처음 깃허브를 접하구 하시는 분들은 이 플랫폼을 사용할 때 되게 난항이 있을것 같다… (내가 그랬다...)\n- 그리고 원래 만들어 놓았던 사이트는 뭔가 좀 지저분한 느낌이 들어서….\n- 이번 수업 멘토 학생들이 기록할 때는 본인만의 방식으로 자유롭게 기록 장소를 만들었으면 좋겠다(\\(\\star\\star\\star\\))\n- 이참에 절차를 확실히 만들어 보자!\n\nquarto 장점 1 : 마크다운 형식 지원, 코드 출력값(그래프, 코드 실행결과) 지원\n\n이를 통해서, 코드와 분석이론을 한꺼번에 정리할 수 있음,\n\nquarto 장점 2 : 만들기 쉬움, 복잡한 css코드 같은 것 몰라도 됨, github 데스크탑과 로컬 폴더 연결만하면 마우스 클릭만으로 웹사이트 제작 가능\n\n\n\n- quarto download link : 여기서 quarto를 다운받자!\n\n\n\n1 Terminal을 켠다음에 아래와 같은 명령어를 입력한다!\n(그.. 명령어 입력할 때 현재 자기 주피터 킬때 켜지는 폴더로 옮긴 다음에 수행하자… 골치 아프다ㅜㅜ)\nquarto create project website gcsite\n2 그러면 다음과 같은 이미지가 보인다\n\n3 저기 open with 어찌고 보이는데 d버튼 누르면 (don’t open)으로 넘어가니 그걸 선택한 후 엔터를 눌러준다!\n4 그러면 아래 이미지처럼 맨 밑에 gcsite라는 폴더가 생긴 것을 볼 수 있다.\n\n\n\n\n1 깃허브 데스크탑을 킨다.\n2 상단 메뉴바 \\(\\to\\) File \\(\\to\\) Add local repository\n3 그러면 아래와 같은 경고문이 뜬다.\n\n5 local하고 연결하고 싶은데 깃허브에는 gcsite가 없으니 만들어 달라는 것임. “create a repository” 를 눌러주자.\n\n6 create repository를 선택한다.\n7 그러면 깃허브 데스크탑에서 너 방금 만든거 너꺼 깃허브에 Publish 할거냐고 물어봄\n\n8 Publish repository 눌러주면 끝~~ (단, publish할 때 private 체크박스는 해제하구 하자!)\n9 그 다음 내가 생성산 gcsite 저장소 setting으로 넘어가서 pages를 클릭!\n10 아래와 같이 branch를 수정 후 save 버튼 눌러주자\n\n\n\n\n1 quarto 원리 : 작성한 ipynb파일 html파일로 출력해서 그 html파일들로 웹사이트를 구성하는 것1\n2 step1. posts와 docs라는 폴더를 만들자\n\nposts는 내가 작성하는 ipynb파일들이 들어갈거고, docs에는 html파일이 들어갈 것이다.\n\n3 step2. index 파일 수정\n\nindex파일은 뭐랄까 네비게이터 역할이랄까 아래와 같이 바꿔주자\n\n---\ntitle: \"GC site\"\nlisting:\n  contents: posts\n  sort: [date desc, title]\n  type: table\n  categories: true\n  sort-ui: true\n  filter-ui: true\npage-layout: full\ntitle-block-banner: true\n---\n4 step3. _quarto.yml 파일 수정 \\(\\to\\) 템플릿이랑 디자인 이쁜거 많으니 본인 입맛에 맞게 수정하면 됩니당\nproject:\n  type: website\n  output-dir : docs  \nwebsite:\n  title: \"GC site\"\n  page-navigation: true\n  navbar:\n    right:\n      - icon : github\n        href : https://github.com/gangcheol/\n  sidebar:\n    style: \"docked\"\n    search: True\n    contents: auto\n    \nformat:\n  html:\n    css: styles.css\n    toc: true\n    code-fold : False\n    code-line-numbers : True\n    code-copy : True\n\ntheme :\n  light : flatly\n  \neditor : visual\n5 step4. 앞서 만든 posts폴더에 아무 파일이나 만들어보자\n\n6 step5. 그 후 다시 터미널에서 내가 생성한 폴더로 이동\n필자의 경우는 cd gcsite\n7 step6. quarto render 입력\n8 step7. github desktop보면 난리가 났을 것이다. 막 일을 좀 많이 했음.\n\n로컬하고 연결되어 있으니 로컬이 하고 있는 걸 다적어서 그럼\n\n\n\n저기 내가 밑에 이러한 기록을 init이라고 써놨다. 저건 내가 로컬에서 한 행동을 내 깃허브 로컬에 저장할 건데, 그 행동을 init이라고 쓴거\n이제 저 Commit to main 버튼을 눌러주고 가운데 화면에 뜨는 push origin을 눌러주자!\n\n9 마지막!! 아까 깃허브 로컬 셋팅에서 pases란에 잠시 후에 들어가보면 다음과 같은 것을 볼 수 있다.\n\n- 아래 링크로 들어가면 내가 만든 웹사이트 초안을 볼 수 있다.\n- 링크",
    "crumbs": [
      "Posts",
      "00. Quarto Guide"
    ]
  },
  {
    "objectID": "posts/2023-07-31-00.Quarto Guide.html#install",
    "href": "posts/2023-07-31-00.Quarto Guide.html#install",
    "title": "00. Quarto Guide",
    "section": "",
    "text": "- quarto download link : 여기서 quarto를 다운받자!",
    "crumbs": [
      "Posts",
      "00. Quarto Guide"
    ]
  },
  {
    "objectID": "posts/2023-07-31-00.Quarto Guide.html#website-생성",
    "href": "posts/2023-07-31-00.Quarto Guide.html#website-생성",
    "title": "00. Quarto Guide",
    "section": "",
    "text": "1 Terminal을 켠다음에 아래와 같은 명령어를 입력한다!\n(그.. 명령어 입력할 때 현재 자기 주피터 킬때 켜지는 폴더로 옮긴 다음에 수행하자… 골치 아프다ㅜㅜ)\nquarto create project website gcsite\n2 그러면 다음과 같은 이미지가 보인다\n\n3 저기 open with 어찌고 보이는데 d버튼 누르면 (don’t open)으로 넘어가니 그걸 선택한 후 엔터를 눌러준다!\n4 그러면 아래 이미지처럼 맨 밑에 gcsite라는 폴더가 생긴 것을 볼 수 있다.",
    "crumbs": [
      "Posts",
      "00. Quarto Guide"
    ]
  },
  {
    "objectID": "posts/2023-07-31-00.Quarto Guide.html#깃허브-로컬-연결",
    "href": "posts/2023-07-31-00.Quarto Guide.html#깃허브-로컬-연결",
    "title": "00. Quarto Guide",
    "section": "",
    "text": "1 깃허브 데스크탑을 킨다.\n2 상단 메뉴바 \\(\\to\\) File \\(\\to\\) Add local repository\n3 그러면 아래와 같은 경고문이 뜬다.\n\n5 local하고 연결하고 싶은데 깃허브에는 gcsite가 없으니 만들어 달라는 것임. “create a repository” 를 눌러주자.\n\n6 create repository를 선택한다.\n7 그러면 깃허브 데스크탑에서 너 방금 만든거 너꺼 깃허브에 Publish 할거냐고 물어봄\n\n8 Publish repository 눌러주면 끝~~ (단, publish할 때 private 체크박스는 해제하구 하자!)\n9 그 다음 내가 생성산 gcsite 저장소 setting으로 넘어가서 pages를 클릭!\n10 아래와 같이 branch를 수정 후 save 버튼 눌러주자",
    "crumbs": [
      "Posts",
      "00. Quarto Guide"
    ]
  },
  {
    "objectID": "posts/2023-07-31-00.Quarto Guide.html#문서-생성",
    "href": "posts/2023-07-31-00.Quarto Guide.html#문서-생성",
    "title": "00. Quarto Guide",
    "section": "",
    "text": "1 quarto 원리 : 작성한 ipynb파일 html파일로 출력해서 그 html파일들로 웹사이트를 구성하는 것1\n2 step1. posts와 docs라는 폴더를 만들자\n\nposts는 내가 작성하는 ipynb파일들이 들어갈거고, docs에는 html파일이 들어갈 것이다.\n\n3 step2. index 파일 수정\n\nindex파일은 뭐랄까 네비게이터 역할이랄까 아래와 같이 바꿔주자\n\n---\ntitle: \"GC site\"\nlisting:\n  contents: posts\n  sort: [date desc, title]\n  type: table\n  categories: true\n  sort-ui: true\n  filter-ui: true\npage-layout: full\ntitle-block-banner: true\n---\n4 step3. _quarto.yml 파일 수정 \\(\\to\\) 템플릿이랑 디자인 이쁜거 많으니 본인 입맛에 맞게 수정하면 됩니당\nproject:\n  type: website\n  output-dir : docs  \nwebsite:\n  title: \"GC site\"\n  page-navigation: true\n  navbar:\n    right:\n      - icon : github\n        href : https://github.com/gangcheol/\n  sidebar:\n    style: \"docked\"\n    search: True\n    contents: auto\n    \nformat:\n  html:\n    css: styles.css\n    toc: true\n    code-fold : False\n    code-line-numbers : True\n    code-copy : True\n\ntheme :\n  light : flatly\n  \neditor : visual\n5 step4. 앞서 만든 posts폴더에 아무 파일이나 만들어보자\n\n6 step5. 그 후 다시 터미널에서 내가 생성한 폴더로 이동\n필자의 경우는 cd gcsite\n7 step6. quarto render 입력\n8 step7. github desktop보면 난리가 났을 것이다. 막 일을 좀 많이 했음.\n\n로컬하고 연결되어 있으니 로컬이 하고 있는 걸 다적어서 그럼\n\n\n\n저기 내가 밑에 이러한 기록을 init이라고 써놨다. 저건 내가 로컬에서 한 행동을 내 깃허브 로컬에 저장할 건데, 그 행동을 init이라고 쓴거\n이제 저 Commit to main 버튼을 눌러주고 가운데 화면에 뜨는 push origin을 눌러주자!\n\n9 마지막!! 아까 깃허브 로컬 셋팅에서 pases란에 잠시 후에 들어가보면 다음과 같은 것을 볼 수 있다.\n\n- 아래 링크로 들어가면 내가 만든 웹사이트 초안을 볼 수 있다.\n- 링크",
    "crumbs": [
      "Posts",
      "00. Quarto Guide"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "수로뻥~!",
    "section": "",
    "text": "Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Title\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nDate\n\n\nTitle\n\n\nAuthor\n\n\n\n\n\n\nDec 2, 2024\n\n\n00. EDA (1)\n\n\nGC \n\n\n\n\nAug 15, 2022\n\n\n00. Quarto Guide\n\n\nGC \n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/00. EDA/2024-12-02-00. EDA (1).html",
    "href": "posts/00. EDA/2024-12-02-00. EDA (1).html",
    "title": "00. EDA (1)",
    "section": "",
    "text": "import\n\nimport plotly.express as px\nimport plotly.io as pio\npio.renderers.default = \"plotly_mimetype+notebook_connected\"\nimport numpy as np\nimport pandas as pd\n\n\n\n공모전 개요\n1 평가 데이터에서 최대 1주일 분량의 분 단위 입력 데이터를 바탕으로 T+1분 시점의 이상 여부를 감지\n2 관망 구조 내 존재하는 각각의 압력계(P)에 대해 이상을 감지할 수 있어야 한다.\n\n\nData load\n\ntrain_a = pd.read_csv(\"D:/projects/kwater_data/open/train/TRAIN_A.csv\")\ntrain_b = pd.read_csv(\"D:/projects/kwater_data/open/train/TRAIN_B.csv\")\n\n\ntrain_a.columns\n\nIndex(['timestamp', 'Q1', 'Q2', 'Q3', 'Q4', 'Q5', 'M1', 'M2', 'M3', 'M4', 'M5',\n       'M6', 'M7', 'M8', 'M9', 'M10', 'M11', 'M12', 'M13', 'M14', 'P1', 'P2',\n       'P3', 'P4', 'P5', 'P6', 'P7', 'P8', 'P9', 'P10', 'P11', 'P12', 'P13',\n       'P14', 'P15', 'P16', 'P17', 'P18', 'P19', 'P20', 'P21', 'P22', 'P23',\n       'P24', 'P25', 'P26', 'anomaly', 'P1_flag', 'P2_flag', 'P3_flag',\n       'P4_flag', 'P5_flag', 'P6_flag', 'P7_flag', 'P8_flag', 'P9_flag',\n       'P10_flag', 'P11_flag', 'P12_flag', 'P13_flag', 'P14_flag', 'P15_flag',\n       'P16_flag', 'P17_flag', 'P18_flag', 'P19_flag', 'P20_flag', 'P21_flag',\n       'P22_flag', 'P23_flag', 'P24_flag', 'P25_flag', 'P26_flag'],\n      dtype='object')\n\n\n\n#train_a.head()\n\n\ntrain_b.columns\n\nIndex(['timestamp', 'Q1', 'Q2', 'Q3', 'Q4', 'P1', 'P2', 'P3', 'P4', 'P5', 'P6',\n       'P7', 'P8', 'P9', 'P10', 'anomaly', 'P1_flag', 'P2_flag', 'P3_flag',\n       'P4_flag', 'P5_flag', 'P6_flag', 'P7_flag', 'P8_flag', 'P9_flag',\n       'P10_flag'],\n      dtype='object')\n\n\n\n#train_b.head()\n\n\ntest_c = pd.read_csv(\"D:/projects/kwater_data/open/test/C/TEST_C_0000.csv\")\ntest_ｄ = pd.read_csv(\"D:/projects/kwater_data/open/test/D/TEST_D_0000.csv\")\n\n\ntest_c.columns\n\nIndex(['timestamp', 'Q1', 'Q2', 'Q3', 'Q4', 'Q5', 'Q6', 'Q7', 'Q8', 'M1', 'M2',\n       'M3', 'M4', 'M5', 'M6', 'M7', 'M8', 'M9', 'M10', 'P1', 'P2', 'P3', 'P4',\n       'P5', 'P6', 'P7', 'P8'],\n      dtype='object')\n\n\n\ntest_d.columns\n\nIndex(['timestamp', 'Q1', 'Q2', 'Q3', 'Q4', 'Q5', 'M1', 'M2', 'M3', 'M4', 'M5',\n       'M6', 'M7', 'M8', 'M9', 'M10', 'M11', 'P1', 'P2', 'P3', 'P4', 'P5',\n       'P6'],\n      dtype='object')\n\n\n\n\n\nDo next\n1 지홍이형이 간단 모델 돌려온 거 보고 인사이트를 얻자",
    "crumbs": [
      "Posts",
      "00. EDA",
      "00. EDA (1)"
    ]
  }
]